const docs=require("../../docs/components"),valueFromDoc=doc=>{if(null==doc)return doc;let value=doc.trim();return value=value.replace(/^('|")/,"").replace(/("|')$/,""),"false"!==value&&("true"===value||value)};export const propsFromDocs=tag=>{const propsDocs={};return docs.components.find(c=>c.tag===tag).props.forEach(p=>{propsDocs[p.name]={name:p.name,type:{name:p.type,required:p.required},defaultValue:valueFromDoc(p.default),description:p.docs,table:{type:{summary:p.type},defaultValue:{summary:valueFromDoc(p.default)}}},p.type.includes("|")&&(propsDocs[p.name].control={type:"select",options:p.type.split("|").map(type=>valueFromDoc(type))})}),propsDocs};export const slotsFromDocs=tag=>{const slotsDocs={};return docs.components.find(c=>c.tag===tag).slots.forEach(p=>{slotsDocs[p.name]={description:p.docs,defaultValue:"",type:"string"}}),slotsDocs};export const eventsFromDocs=tag=>{const eventsDocs={};return docs.components.find(c=>c.tag===tag).events.forEach(p=>{const eventName=`on${p.event[0].toUpperCase()}${p.event.slice(1)}`;eventsDocs[eventName]={action:eventName,description:p.docs}}),eventsDocs};export const attachArgs=(args,events,elm)=>{Object.keys(args).forEach(key=>{if(key.match(/^on/))if(events[key]){let eventName=key.replace(/^on/,"");eventName=`${eventName[0].toLowerCase()}${eventName.slice(1)}`,elm.addEventListener(eventName,args[key])}else elm.addEventListener(key.replace(/^on/,"").toLowerCase(),args[key]);else elm[key]=args[key]})};export const attachSlots=(args,slots,elm)=>{Object.keys(slots).forEach(slot=>{if(args[slot]){const slotElm=document.createElement("span");slotElm.slot=slot,slotElm.innerText=args[slot],elm.appendChild(slotElm)}})};